{% extends "::base.html.twig" %}
{% block css %}
    {{ parent() }}
{% endblock %}
{% block title %}
    Modifier un utilisateur - {{ parent() }}
{% endblock %}
{% block body %}
    <div id="page_heading" data-uk-sticky="{ top: 48, media: 960 }">
        <h1>Formuaire de modification de l'utilsateur</h1>
        <span class="uk-text-muted uk-text-upper uk-text-small">Veuillez bien remplir les champs</span>
    </div>
    <div id="page_content_inner">
        <div class="md-card">
            <div class="md-card-content large-padding">
                <form action="{{ path('fos_user_profile_edit') }}" method="POST" class="uk-form-stacked"
                      id="form_validation">
                    {{ form_errors(form) }}
                    <div class="uk-grid" data-uk-grid-margin>
                        <div class="uk-width-medium-1-2">
                            <div class="parsley-row">
                                <div class="uk-input-group">
                            <span class="uk-input-group-addon">
                                <i class="md-list-addon-icon material-icons">&#xE158;</i>
                            </span>
                                    {{ form_label(form.email,   'Email'  ) }}
                                    {{ form_widget(form.email, {'attr': {'class': 'md-input', 'required':'', 'data-parsley-email':'3'}}) }}
                                </div>
                                <span>     {{ form_errors(form.email) }} </span>
                            </div>
                        </div>
                    </div>
                    <div class="uk-grid" data-uk-grid-margin>
                        <div class="uk-width-medium-1-2">
                            <div class="parsley-row">
                                <div class="uk-input-group">
                            <span class="uk-input-group-addon">
                                <i class="material-icons">&#xE87C;</i>
                            </span>
                                    {{ form_label(form.username,   'Login'  ) }}
                                    {{ form_widget(form.username, {'attr': {'class': 'md-input', 'required':'', 'data-parsley-username':'3'}}) }}
                                </div>
                                <span>     {{ form_errors(form.username) }} </span>
                            </div>
                        </div>
                    </div>
                    <div class="uk-grid" data-uk-grid-margin>
                        <div class="uk-width-medium-1-2">
                            <div class="parsley-row">
                                <div class="uk-input-group">
                            <span class="uk-input-group-addon">
                                <i class="material-icons">&#xE899;</i>
                            </span>
                                    {{ form_label(form.current_password,   'Veuillez taper votre mot de passe actuel'  ) }}
                                    {{ form_widget(form.current_password, {'attr': {'class': 'md-input', 'required':''}}) }}
                                </div>
                                <span>     {{ form_errors(form.current_password) }} </span>
                            </div>
                        </div>
                    </div>
                    <div class="uk-grid" data-uk-grid-margin>
                        <div class="uk-width-medium-1-2">
                            <div class="parsley-row">
                                <div class="uk-input-group">
                            <span class="uk-input-group-addon">
                                <i class="material-icons">&#xE899;</i>
                            </span>
                                    {{ form_label(form.plainPassword.first,   'Nouveau mot de passe') }}
                                    {{ form_widget(form.plainPassword.first) }}
                                </div>
                                <span>     {{ form_errors(form.plainPassword.first) }} </span>
                            </div>
                        </div>
                        <div class="uk-width-medium-1-2">
                            <div class="parsley-row">
                                <div class="uk-input-group">
                            <span class="uk-input-group-addon">
                                <i class="material-icons">&#xE899;</i>
                            </span>
                                    {{ form_label(form.plainPassword.second,   'Confirmer le mot de passe') }}
                                    {{ form_widget(form.plainPassword.second) }}
                                </div>
                                <span>     {{ form_errors(form.plainPassword.second) }} </span>
                            </div>
                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-1-1">
                            {{ form_widget(form.save , {'attr': {'class': 'md-btn md-btn-primary'}}) }}
                        </div>
                    </div>
                    {{ form_rest(form) }}
                </form>
            </div>
        </div>
    </div>
{% endblock %}
{% block js %}
    {{ parent() }}
    <script>
        altair_forms.parsley_validation_config();
    </script>
    {% javascripts output="js/compiled/mainSimpleValidation.js"
    'bundles/grifoflextunisie/assets/js/kendoui_custom.min.js'
    'bundles/grifoflextunisie/bower_components/parsleyjs/dist/parsley.min.js'
    'bundles/grifoflextunisie/assets/js/pages/forms_validation.min.js' %}
    <script src="{{ asset_url }}"></script>
    {% endjavascripts %}
    <script>
        $(function () {
            var domEmail = $('#fos_user_profile_form_email');
            var domUserName = $('#fos_user_profile_form_username');
            var oldemail = domEmail.val().toUpperCase();
            domEmail.on('change', function () {
                var email = $domEmail.val().toUpperCase();

                if (email !== oldemail) {
                    $.ajax({
                        async: true,
                        type: "POST",
                        url: '{{ app.request.getSchemeAndHttpHost() ~ app.request.baseUrl }}' + Routing.generate('user_mail_check_unique', {mail: email}),

                        success: function (response) {
                            if (response.exists) {
                                window.Parsley.addValidator('email', {
                                    validateString: function () {
                                        return false;
                                    },
                                    messages: {
                                        en: 'This email exists already',
                                        fr: "Cet email existe déjà"
                                    }
                                });
                            } else {
                                window.Parsley.addValidator('email', {
                                    validateString: function () {
                                        return true;
                                    }
                                });
                            }
                            domEmail.parsley().validate();
                        }
                    });
                }
            });
            var oldUsername = domUserName.val().toUpperCase();
            domUserName.on('change', function () {
                var username = $domUserName.val().toUpperCase();
                if (username !== oldUsername) {
                    $.ajax({
                        async: true,
                        type: "POST",
                        url: '{{ app.request.getSchemeAndHttpHost() ~ app.request.baseUrl }}' + Routing.generate('user_username_check_unique', {username: username}),

                        success: function (response) {
                            if (response.exists) {
                                window.Parsley.addValidator('username', {
                                    validateString: function () {
                                        return false;
                                    },
                                    messages: {
                                        en: 'this pseudo exists already',
                                        fr: "Ce pseudo existe déjà"
                                    }
                                });
                            } else {
                                window.Parsley.addValidator('username', {
                                    validateString: function () {
                                        return true;
                                    }
                                });
                            }
                            domUserName.parsley().validate();
                        }
                    });
                }
            });
        });
    </script>
{% endblock %}